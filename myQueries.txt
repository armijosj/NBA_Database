Query 1: Show me the three teams that have the most wins as an away team:
SELECT cityName, nickname, count(WL_away) as numWins FROM GAME JOIN team ON idTeamAway=idTeam WHERE WL_away = "W" 
GROUP BY idTeam
ORDER BY numWins DESC
LIMIT 3;

SELECT cityName, nickname FROM GAME JOIN team ON idTeamAway=idTeam WHERE WL_away = "W" 
GROUP BY idTeam
ORDER BY count(WL_away) DESC
LIMIT 3;
------------------------------------------------------
Query 2:Show me the three teams that have the most wins as an away team:
SELECT cityName, nickname, count(WL_home) as numWins FROM GAME JOIN team ON idTeamHome=idTeam WHERE WL_home = "W" 
GROUP BY idTeam
ORDER BY numWins DESC
LIMIT 3;

SELECT cityName, nickname, count(WL_home) as numWins FROM GAME JOIN team ON idTeamHome=idTeam WHERE WL_home = "W" 
GROUP BY idTeam
ORDER BY numWins DESC
LIMIT 3;

------------------------------------------------------
Query 3:Show me the three teams that have the all time most wins and the number of wins
SELECT cityName, nickname, count(WL_home) as numWins FROM (
SELECT * FROM GAME JOIN team ON idTeamHome=idTeam WHERE WL_home="W"
UNION
SELECT * FROM GAME JOIN team ON idTeamAway=idTeam WHERE WL_away="W"
)
GROUP BY idTeam
ORDER BY numWins DESC
LIMIT 3;



------------------------------------------------------
Query 4:Show me the three players that have played the most seasons and the number of seasons they have played:
SELECT namePlayer, seasons FROM nba_player NATURAL JOIN nba_player_stats 
group by idPlayer ORDER BY seasons DESC LIMIT 3

------------------------------------------------------
Query 5: Show me all Referees that have oversaw ever game: (it is empty and takes a lot of time but it is division)
SELECT * FROM referee WHERE NOT EXISTS
(
	SELECT idGame FROM game
	EXCEPT
	SELECT idGame FROM oversee WHERE oversee.idReferee=referee.idReferee
);

-----------------------------------------------------
Query 5: Show me all Players that average any double-double: (it is empty and takes a lot of time but it is division)
SELECT namePlayer FROM nba_player NATURAL JOIN nba_player_stats 
WHERE points>=10 AND rebounds>=10
OR points>=10 AND assists>=10
OR rebounds>=10 AND assists>=10;


-----------------------------------------------------
Query 6: Show me all Players that average a triple-double: (it is empty and takes a lot of time but it is division)
SELECT namePlayer FROM nba_player NATURAL JOIN nba_player_stats 
WHERE points>=10 AND rebounds>=10 AND assists>=10;

-----------------------------------------------------
Query 7: Show the Player that is closer to average a triple-double: (it is empty and takes a lot of time but it is division)
SELECT * FROM nba_player NATURAL JOIN nba_player_stats 
WHERE points>=9 AND rebounds>=9 AND assists>=9 LIMIT 1;

-----------------------------------------------------
Query 8: Show me the arena that has hold more games:
SELECT arenaName, count(idGame) as numGames FROM arena NATURAL JOIN team JOIN game ON idTeamHome=idTeam NATURAL JOIN game_stats 
GROUP BY arenaName
ORDER BY numGames DESC 
LIMIT 1;



-----------------------------------------------------
Query 9: Show me the arena that has recieved more points in total:
SELECT arenaName, sum(PTS_away) as numPTSRecieved FROM arena NATURAL JOIN team JOIN game ON idTeamHome=idTeam NATURAL JOIN game_stats 
GROUP BY arenaName
ORDER BY numPTSRecieved DESC 
LIMIT 1;


-----------------------------------------------------
Query 9: Show me the arena that recieves the least number of points in all games combined:
SELECT arenaName, avg(PTS_away) as numPTSRecieved FROM arena NATURAL JOIN team JOIN game ON idTeamHome=idTeam NATURAL JOIN game_stats 
GROUP BY arenaName
ORDER BY numPTSRecieved
LIMIT 1;



-----------------------------------------------------
Query 10: Show me the team that makes the most points in all games combined:
SELECT cityName, nickname, avg(PTS_home) FROM arena NATURAL JOIN team JOIN game ON idTeamHome=idTeam NATURAL JOIN game_stats 
GROUP BY arenaName
ORDER BY avg(PTS_home) DESC
LIMIT 1;

--------------------NEW QUERIES-----------------------

Query 23: Show me the name of all nonNBA players that were not drafted:
SELECT nameNonPlayer FROM nonNBA_player 
EXCEPT
SELECT nameNonPlayer FROM nonNBA_player JOIN draft_player ON idNonPlayer=idPlayer;

Query 24: Show me the average weight of a drafted player:
SELECT avg(weight) FROM nonNBA_player JOIN draft_player ON idNonPlayer=idPlayer;

Query 25: Show me which referee has seen the most points:
SELECT firstName, lastName, sum(PTS_home+PTS_away) as numPointsSeen FROM referee NATURAL JOIN oversee NATURAL JOIN game NATURAL JOIN game_stats
GROUP BY idReferee
ORDER BY numPointsSeen DESC
LIMIT 1;

Query 26: Show me the top ten countries with most players in the NBA and the number of players of each country.
SELECT countryName, count(idPlayer) as numPlayers FROM nba_player JOIN country on nba_player.country=countryName
GROUP BY countryName
ORDER BY numPlayers DESC
LIMIT 10;

Query 27: What is the average points of the 1st round 1st pick of all draft:
SELECT namePlayer, avg(points)  FROM draft_player NATURAL JOIN nba_player NATURAL JOIN nba_player_stats 
WHERE numberRound = 1 AND numberRoundPick = 1;

Query 28: What is the average point of the 1st rounf 30th pick of all draft:
SELECT  avg(points)  FROM draft_player NATURAL JOIN nba_player NATURAL JOIN nba_player_stats 
WHERE numberRound = 1 AND numberRoundPick = 30;





-------------------- NELSON QUERIES -------------------------------

Query 1: 
	Find all players who play for Dallas more than 10 years order desc
	SELECT idPlayer as id, namePlayer as name, toYear - fromYear as playIn from nba_player 
	natural join team 
	where cityName = 'Dallas' and playIn > 10
	order by playIn DESC

Query 2: 
	Counter the number of players from each country order by number of players desc
	Select idPlayer as id, namePlayer as name, toYear - fromYear as playedYear from nba_player
	where isActive = 'Active'
	order by toYear - fromYear DESC
	limit 10

Query 3: 
	Find the players that attend more than 7 all-star games
	CREATE VIEW "Q3" AS Select idPlayer as id, namePlayer as name, toYear - fromYear as playedYear from nba_player
	where isActive = 'Active'
	order by toYear - fromYear DESC
	limit 10

Query 4: 
	The team has the most all-star players in history desc order by all star player amount
	Select idPlayer as id, namePlayer as name, toYear - fromYear as playedYear from nba_player
	where isActive = 'Active'
	order by toYear - fromYear DESC
	limit 10

Query 5: 
	Find top 10 players with longest played years in NBA
	Select idPlayer as id, namePlayer as name, toYear - fromYear as playedYear from nba_player
	where isActive = 'Active'
	order by toYear - fromYear DESC
	limit 10

Query 6: 
	Find the team which can get the highest average mark in a game in current
	SELECT count(idPlayer) as playerNumber, nickname as teamName, sum(points) from nba_player
	natural join team
	natural join nba_player_stats
	where isActive ='Active'
	group by nickname
	order by sum(points) DESC

Query 7: 
	Find the top 5 overseas players with points who comes overseas and their team
	SELECT idplayer as id, namePlayer, country, nickname, points from nba_player
	natural join nba_player_stats
	natural join team
	where isActive ='Active' and country != 'USA'
	order by points DESC limit 5

Query 8: 
	Use a formula that the overall points of a player as 
	Ova = point*0.4 + assist*0.3 + rebound *0.3
	Find the best player in NBA
	SELECT idplayer as id, namePlayer, nickname, points*0.4+ assists*0.3 + rebounds*0.3  OVA from nba_player
	NATURAL join nba_player_stats
	natural join team
	where isActive ='Active'
	order by OVA DESC limit 5

Query 9: 
	Use a formula that the overall points of a team is sum of players status 
	Ova = point*0.4 + assist*0.3 + rebound *0.3
	Find the worst team in NBA
	SELECT nickname as team, sum(points)*0.5+sum(rebounds)*0.4+ sum(assists)*0.3 as teamOVA FROM team
	NATURAL JOIN nba_player_stats
	natural JOIN nba_player
	where isActive = 'Active'
	group by team
	order by teamOVA

Query 10: 
	Find the team get how many wins in their home in a certain season
	Select nickname as team, count(WL_home = 'W') as homeWIN from team
	NATURAL JOIN game 
	NATURAL JOIN season 
	where year = '2019' and team.idTeam = game.idTeamHome
	group by team
	order by homeWIN
